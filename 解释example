import uasyncio as asyncio
import uaiohttpclient as aiohttp

#从HTTP响应对象中读取流式数据并打印。它通过调用resp.read()来读取响应的内容，并通过print()函数将内容打印出来。
def print_stream(resp):
    print((yield from resp.read()))
    return
    while True:
        line = yield from reader.readline()
        if not line:
            break
        print(line.rstrip())

#发送HTTP GET请求并处理响应。它通过调用aiohttp.request()函数来发送GET请求，并将响应对象赋值给变量resp。
#然后，它通过调用print_stream(resp)函数来处理响应的内容
def run(url):
    resp = yield from aiohttp.request("GET", url)
    print(resp)
    yield from print_stream(resp)


import sys
import logging

logging.basicConfig(level=logging.INFO)
#这是配置日志的语句，将日志级别设置为INFO级别，用于输出日志信息。
url = sys.argv[1]
#从命令行参数获取URL的方式，将第一个参数作为URL赋值给变量url。
loop = asyncio.get_event_loop()
#获取事件循环对象的方式，用于管理协程的执行。
loop.run_until_complete(run(url))
#运行协程函数run(url)直到完成的方式，将url作为参数传递给run()函数。
loop.close()
